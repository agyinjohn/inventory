// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["mongodb"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Users {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  name  String
  email String @unique
}

model Products {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  price         Float
  rating        Float?
  stockQuantity Int
  Sales         Sales[]
  Purchases     Purchases[]
}

model Sales {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  productId   String   @db.String
  timestamp   DateTime
  quantity    Int
  unitPrice   Float
  totalAmount Float
  product     Products @relation(fields: [productId], references: [id])
}

model Purchases {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  productId  String   @db.String
  timestamp  DateTime
  quantity   Int
  unitCost   Float
  totalCost  Float
  product    Products @relation(fields: [productId], references: [id])
}

model Expenses {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  category  String
  amount    Float
  timestamp DateTime
}

model SalesSummary {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  totalValue       Float
  changePercentage Float?
  date             DateTime
}

model PurchaseSummary {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  totalPurchased   Float
  changePercentage Float?
  date             DateTime
}

model ExpenseSummary {
  id                String              @id @default(auto()) @map("_id") @db.ObjectId
  totalExpenses     Float
  date              DateTime
  ExpenseByCategory ExpenseByCategory[]
}

model ExpenseByCategory {
  id               String           @id @default(auto()) @map("_id") @db.ObjectId
  expenseSummaryId String           @db.String
  category         String
  amount           Float
  date             DateTime
  expenseSummary   ExpenseSummary   @relation(fields: [expenseSummaryId], references: [id])
}
